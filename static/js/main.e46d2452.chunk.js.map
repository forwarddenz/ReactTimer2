{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","count","isCount","Start","setState","countID","setInterval","Stop","clearInterval","Reset","userCount","localStorage","getItem","this","setItem","className","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAyDeA,E,4MArDbC,MAAQ,CACNC,MAAO,EACPC,SAAS,G,EAkBXC,MAAQ,WACN,EAAKC,SAAS,CAACF,SAAS,IACxB,EAAKG,QAAUC,aAAY,WACzB,EAAKF,SAAS,CAACH,MAAO,EAAKD,MAAMC,MAAQ,MACxC,M,EAGLM,KAAO,WACL,EAAKH,SAAS,CAACF,SAAS,IACxBM,cAAc,EAAKH,U,EAGrBI,MAAQ,WACN,EAAKL,SAAS,CAACF,SAAS,IACxBM,cAAc,EAAKH,SACnB,EAAKD,SAAS,CAACH,MAAO,K,uDA9BxB,WACE,IAAMS,EAAYC,aAAaC,QAAQ,SACnCF,GACFG,KAAKT,SAAS,CAACH,OAAQS,M,gCAI3B,WACEC,aAAaG,QAAQ,QAASD,KAAKb,MAAMC,S,kCAG3C,WACEO,cAAcK,KAAKR,W,oBAqBrB,WACE,OACE,sBAAKU,UAAU,MAAf,UACE,qBAAKA,UAAU,OAAf,SAAuBF,KAAKb,MAAMC,QAChCY,KAAKb,MAAME,QAGb,wBAAQc,QAASH,KAAKN,KAAtB,kBAFA,wBAAQS,QAASH,KAAKV,MAAtB,mBAIA,wBAAQa,QAASH,KAAKJ,MAAtB,0B,GAhDUQ,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.e46d2452.chunk.js","sourcesContent":["import './App.css';\nimport React, {Component} from 'react';\n\nclass App extends Component {\n  state = {\n    count: 0,\n    isCount: false\n  }\n\n  componentDidMount() {\n    const userCount = localStorage.getItem('timer');\n    if (userCount) {\n      this.setState({count: +userCount});\n    }\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('timer', this.state.count);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.countID);\n  }\n\n  Start = () => {\n    this.setState({isCount: true});\n    this.countID = setInterval(() => {\n      this.setState({count: this.state.count + 1});\n    }, 1000);\n  }\n\n  Stop = () => {\n    this.setState({isCount: false});\n    clearInterval(this.countID);\n  }\n\n  Reset = () => {\n    this.setState({isCount: false});\n    clearInterval(this.countID);\n    this.setState({count: 0});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className='time'>{this.state.count}</div>\n        {!this.state.isCount ? (\n        <button onClick={this.Start}>Start</button>\n        ) : (\n        <button onClick={this.Stop}>Stop</button>\n        )}\n        <button onClick={this.Reset}>Reset</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}